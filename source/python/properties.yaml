# Properties for the recommender system
business_type: hotel
fm_review_type:
lda_review_type: specific
topn_n: 10
topn_num_items: 270
random_seed: 0
numpy_random_seed: 0
num_cycles: 1
context_extractor_alpha: 0.0
context_extractor_beta: 1.0
context_extractor_epsilon: 0.05
topic_model_num_topics: 150
topic_model_passes: 1
topic_model_iterations: 400
lda_multicore: False
libfm_seed: 0
cross_validation_num_folds: 10
use_context: True
shuffle_data: True
num_cores:
cache_topic_model: False
text_sampling_proportion:
# Possible values: Probability, binary, all_topics
topic_weighting_method: probability
lda_beta_comparison_operator: lt
bow_type: NN
lemmatize: True
min_dictionary_word_count: 5
max_dictionary_word_count: 0.2
# Possible values: review, sentence or integer numer indicating the number of
# sentences to use (1 is 1st sentence, 2 is 1st and 2nd, etc.)
document_level: 1
solver: libfm
fastfm_method: mcmc
evaluation_metric: topn_recall
resampler: smote-enn
document_classifier: random_forest
document_classifier_seed: 0
test_context_reviews_only: True
# Use a feature with the sum of all the non-contextual topic probabilities
use_no_context_topics_sum: False
fm_num_factors: 10
fm_use_bias: True
fm_use_1way_interactions: True
fm_iterations: 100
fm_init_stdev: 0.1
max_sample_test_set: 200
nested_cross_validation_cycle: 0
# Possible values: nested_validate, nested_test, simple
# Here the dataset is split into 3 sets, train, validate and test
# nested_validate means that the train set is used to train data and validate
# set to test
# nested_test means that the train+validate sets are use to train data and test
# set to test
cross_validation_strategy: nested_validate
topic_model_type: lda
